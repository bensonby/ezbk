<%= form_for(@transaction) do |f| %>
  <% if @transaction.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@transaction.errors.count, "error") %> prohibited this transaction from being saved:</h2>

      <ul>
      <% @transaction.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :transaction_date %><br />
    <%= f.text_field :transaction_date, :tabindex => autotab, :class => 'date' %>
  </div>
  <div class="field">
    <%= f.label :description %><br />
    <%= f.text_field :description, :tabindex => autotab %>
  </div>
  <div class="field">
    <table class="center">
      <thead>
      <tr>
          <th>Account</th>
          <th>Debit Amount</th>
          <th>Remove this row</th>
        </tr>
      </thead>
      <tbody id="transaction-entries-input">
        <%= f.fields_for :transaction_entries do |transaction_entry| %>
          <%= render "transaction_entry_fields", :f => transaction_entry %>
        <% end %>
        <tr>
          <td>
            <%= link_to_add_fields "Add Transaction Entry", f, :transaction_entries, {:tabindex => 9999, :id => "add-transaction-entry", :"container-tag" => "tr" } %>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  <div class="actions">
    <%= f.submit :tabindex => autotab %>
  </div>
<% end %>
<% content_for :javascripts do %>
<script type="text/javascript">

$(document).on('change', '.input-debit-amount', function(event){
  if($(this).val() != "") $(this).addClass("manual-input");
  else $(this).removeClass("manual-input");
  setRemainingAmount();
});
$(document).on('click', '.remove-transaction-entry', function(event){
  setRemainingAmount();
});
function setRemainingAmount(){
  $(".input-debit-amount:not(.manual-input)").each(function(index, e){
    $(e).val("");
  });

  var total = 0.0;
  $(".input-debit-amount.manual-input").filter(":visible").each(function(i,e){ total+=parseFloat($(e).val()); });
  if(total.toFixed(2) == "0.00") return ;
  if($(".input-debit-amount:not(.manual-input)").filter(":visible").length == 0){
    var add_transaction_entry_element = $('#add-transaction-entry');
    var scripts = add_transaction_entry_element.attr('onclick');
    scripts = scripts.replace(/add_fields\(this/, "add_fields($('#add-transaction-entry')");
    eval(scripts);
  }
  $(".input-debit-amount:not(.manual-input):visible:first").val(-total.toFixed(2));
}

  $('#new_transaction').validate({
    ignore: [],
    errorLabelContainer: "#form-validation-messages",
    wrapper: 'li',
    rules: {
      tranxaction_id: {
        required: true,
        minlength: 1
      },
      transaction_date: {
        required: true,
        dateISO: true,
        rangelength: [10,10]
      }
    },
    messages: {
      transaction_date: "Please enter a valid transaction date (YYYY-MM-DD)",
      tranxaction_id:   "Please select an existing transaction"
    }
  });


</script>
<% end %>
